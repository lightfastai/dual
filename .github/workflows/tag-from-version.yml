name: Tag from Version

on:
  push:
    branches: [main]
    paths:
      - 'npm/package.json'

permissions:
  contents: write

jobs:
  check-and-tag:
    name: Create Git Tag from Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if version changed
        id: version_check
        run: |
          VERSION=$(jq -r .version npm/package.json)

          # Check if this was a version commit by changesets
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ "$COMMIT_MSG" != *"version packages"* ]]; then
            echo "Not a version packages commit, skipping"
            echo "should_tag=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Check if tag already exists
          if git rev-parse "v$VERSION" >/dev/null 2>&1; then
            echo "Tag v$VERSION already exists locally"
            echo "should_tag=false" >> $GITHUB_OUTPUT
          elif git ls-remote --tags origin | grep -q "refs/tags/v$VERSION$"; then
            echo "Tag v$VERSION already exists on remote"
            echo "should_tag=false" >> $GITHUB_OUTPUT
          else
            echo "New version detected: $VERSION"
            echo "should_tag=true" >> $GITHUB_OUTPUT
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Create and push tag
        if: steps.version_check.outputs.should_tag == 'true'
        run: |
          VERSION=${{ steps.version_check.outputs.version }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"
          echo "âœ… Created and pushed tag v$VERSION"
        env:
          # Use PAT to trigger downstream workflows (release.yml)
          # Default GITHUB_TOKEN cannot trigger other workflows
          GITHUB_TOKEN: ${{ secrets.LIGHTFAST_RELEASE_BOT_GITHUB_TOKEN }}
